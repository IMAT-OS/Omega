var asyncTimer,NativePromise=window.Promise,nativePromiseSupported=NativePromise&&"resolve"in NativePromise&&"reject"in NativePromise&&"all"in NativePromise&&"race"in NativePromise&&function(){var e;return new NativePromise(function(t){e=t}),"function"==typeof e}(),PENDING="pending",SEALED="sealed",FULFILLED="fulfilled",REJECTED="rejected",NOOP=function(){},asyncSetTimer="undefined"!=typeof setImmediate?setImmediate:setTimeout,asyncQueue=[];function asyncFlush(){for(var e=0;e<asyncQueue.length;e++)asyncQueue[e][0](asyncQueue[e][1]);asyncQueue=[],asyncTimer=!1}function asyncCall(e,t){asyncQueue.push([e,t]),asyncTimer||(asyncTimer=!0,asyncSetTimer(asyncFlush,0))}function invokeResolver(e,t){function n(e){reject(t,e)}try{e(function(e){resolve(t,e)},n)}catch(e){n(e)}}function invokeCallback(e){var t=e.owner,n=t.state_,r=t.data_,i=e[n],o=e.then;if("function"==typeof i){n=FULFILLED;try{r=i(r)}catch(e){reject(o,e)}}handleThenable(o,r)||(n===FULFILLED&&resolve(o,r),n===REJECTED&&reject(o,r))}function handleThenable(e,t){var n;try{if(e===t)throw new TypeError("A promises callback cannot return that same promise.");if(t&&("function"==typeof t||"object"==typeof t)){var r=t.then;if("function"==typeof r)return r.call(t,function(r){n||(n=!0,t!==r?resolve(e,r):fulfill(e,r))},function(t){n||(n=!0,reject(e,t))}),!0}}catch(t){return n||reject(e,t),!0}return!1}function resolve(e,t){e!==t&&handleThenable(e,t)||fulfill(e,t)}function fulfill(e,t){e.state_===PENDING&&(e.state_=SEALED,e.data_=t,asyncCall(publishFulfillment,e))}function reject(e,t){e.state_===PENDING&&(e.state_=SEALED,e.data_=t,asyncCall(publishRejection,e))}function publish(e){var t=e.then_;e.then_=void 0;for(var n=0;n<t.length;n++)invokeCallback(t[n])}function publishFulfillment(e){e.state_=FULFILLED,publish(e)}function publishRejection(e){e.state_=REJECTED,publish(e)}function Promise(e){if("function"!=typeof e)throw new TypeError("Promise constructor takes a function argument");if(this instanceof Promise==!1)throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this.then_=[],invokeResolver(e,this)}Promise.prototype={constructor:Promise,state_:PENDING,then_:null,data_:void 0,then:function(e,t){var n={owner:this,then:new this.constructor(NOOP),fulfilled:e,rejected:t};return this.state_===FULFILLED||this.state_===REJECTED?asyncCall(invokeCallback,n):this.then_.push(n),n.then},catch:function(e){return this.then(null,e)}},Promise.all=function(e){if(!Array.isArray(e))throw new TypeError("You must pass an array to Promise.all().");return new this(function(t,n){var r=[],i=0;function o(e){return i++,function(n){r[e]=n,--i||t(r)}}for(var a,s=0;s<e.length;s++)(a=e[s])&&"function"==typeof a.then?a.then(o(s),n):r[s]=a;i||t(r)})},Promise.race=function(e){if(!Array.isArray(e))throw new TypeError("You must pass an array to Promise.race().");return new this(function(t,n){for(var r,i=0;i<e.length;i++)(r=e[i])&&"function"==typeof r.then?r.then(t,n):t(r)})},Promise.resolve=function(e){return e&&"object"==typeof e&&e.constructor===this?e:new this(function(t){t(e)})},Promise.reject=function(e){return new this(function(t,n){n(e)})},nativePromiseSupported||(window.Promise=Promise);